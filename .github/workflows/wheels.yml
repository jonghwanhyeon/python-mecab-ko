name: Build

on: [push, pull_request]

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    env:
      CIBW_ARCHS_MACOS: "x86_64 universal2 arm64"
    strategy:
      matrix:
        os: [ubuntu-20.04, macos-11]
        cibw_archs: ["auto"]
        include:
          - os: ubuntu-20.04
            cibw_archs: "aarch64"


    steps:
      - name: Set up QEMU
        if: matrix.cibw_archs == 'aarch64'
        uses: docker/setup-qemu-action@v2
        with:
          platforms: arm64

      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Build wheels for CPython 3.11
        uses: pypa/cibuildwheel@v2.11.2
        env:
          CIBW_BUILD: "cp311-*"
          CIBW_SKIP: "*-musllinux*"
          CIBW_ARCHS: ${{ matrix.cibw_archs }}

      - name: Build wheels for CPython 3.10
        uses: pypa/cibuildwheel@v2.11.2
        env:
          CIBW_BUILD: "cp310-*"
          CIBW_SKIP: "*-musllinux*"
          CIBW_ARCHS: ${{ matrix.cibw_archs }}

      - name: Build wheels for CPython 3.9
        uses: pypa/cibuildwheel@v2.11.2
        env:
          CIBW_BUILD: "cp39-*"
          CIBW_SKIP: "*-musllinux*"
          CIBW_ARCHS: ${{ matrix.cibw_archs }}

      - name: Build wheels for CPython 3.8
        uses: pypa/cibuildwheel@v2.11.2
        env:
          CIBW_BUILD: "cp38-*"
          CIBW_SKIP: "*-musllinux*"
          CIBW_ARCHS: ${{ matrix.cibw_archs }}

      - name: Build wheels for CPython 3.7
        uses: pypa/cibuildwheel@v2.11.2
        env:
          CIBW_BUILD: "cp37-*"
          CIBW_SKIP: "*-musllinux*"
          CIBW_ARCHS: ${{ matrix.cibw_archs }}

      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Build sdist
        run: pipx run build --sdist

      - uses: actions/upload-artifact@v3
        with:
          path: dist/*.tar.gz

  upload_pypi:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.event.head_commit.message, 'Version')
    steps:
      - uses: actions/download-artifact@v3
        with:
          # unpacks default artifact into dist/
          # if `name: artifact` is omitted, the action will create extra parent dir
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@v1.5.0
        with:
          user: __token__
          password: ${{ secrets.pypi_password }}